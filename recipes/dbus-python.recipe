# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
from cerbero.utils import git

class Recipe(recipe.Recipe):
    name = 'dbus-python'
    version = '1.1.0'
    licenses = [License.LGPLv2_1Plus]
    deps = ['dbus', 'dbus-glib']


    files_python = [
        'site-packages/_dbus_bindings%(pext)s',
        'site-packages/_dbus_glib_bindings%(pext)s',
        'site-packages/dbus/__init__.py',
        'site-packages/dbus/_compat.py',
        'site-packages/dbus/_dbus.py',
        'site-packages/dbus/_expat_introspect_parser.py',
        'site-packages/dbus/_version.py',
        'site-packages/dbus/bus.py',
        'site-packages/dbus/connection.py',
        'site-packages/dbus/decorators.py',
        'site-packages/dbus/exceptions.py',
        'site-packages/dbus/gi_service.py',
        'site-packages/dbus/glib.py',
        'site-packages/dbus/gobject_service.py',
        'site-packages/dbus/lowlevel.py',
        'site-packages/dbus/mainloop/__init__.py',
        'site-packages/dbus/mainloop/glib.py',
        'site-packages/dbus/proxies.py',
        'site-packages/dbus/server.py',
        'site-packages/dbus/service.py',
        'site-packages/dbus/types.py',
        ]

    files_devel = [
        'include/dbus-1.0/dbus/dbus-python.h',
        'lib/pkgconfig/dbus-python.pc'
        ]

    def fetch(self):
        if not os.path.exists(self.repo_dir):
            git.init(self.repo_dir)
        for remote, url in self.remotes.iteritems():
            git.add_remote(self.repo_dir, remote, url)
        # fetch remote branches
        git.fetch(self.repo_dir, fail=False)
        commit = self.commit
        git.checkout(self.repo_dir, commit)
